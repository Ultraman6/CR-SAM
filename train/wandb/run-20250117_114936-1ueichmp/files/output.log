2025-01-17 11:49:38,115 | Epoch: [0 | 200]
2025-01-17 11:49:52,690 | Phase:train -- Batch_idx:100/391-- 878.30 samples/sec-- Loss:2.33 -- Acc:19.16
2025-01-17 11:50:04,777 | Phase:train -- Batch_idx:200/391-- 960.20 samples/sec-- Loss:2.11 -- Acc:23.49
2025-01-17 11:50:17,951 | Phase:train -- Batch_idx:300/391-- 963.98 samples/sec-- Loss:1.99 -- Acc:26.83
[1.9231761374282836, 28.994]
--- Logging error ---
Traceback (most recent call last):
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "E:\Github\CR-SAM\train\gsam_train.py", line 226, in <module>
    main(args)
  File "E:\Github\CR-SAM\train\gsam_train.py", line 187, in main
    log_metric(
  File "E:\Github\CR-SAM\utils\utils.py", line 27, in log_metric
    logging.info(', '.join(labels), ", round: ", round)
Message: 'Train Loss : 1.9231761374282836, Train Accuracy : 28.994'
Arguments: (', round: ', 0)
--- Logging error ---
Traceback (most recent call last):
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "E:\Github\CR-SAM\train\gsam_train.py", line 226, in <module>
    main(args)
  File "E:\Github\CR-SAM\train\gsam_train.py", line 187, in main
    log_metric(
  File "E:\Github\CR-SAM\utils\utils.py", line 27, in log_metric
    logging.info(', '.join(labels), ", round: ", round)
Message: 'Train Loss : 1.9231761374282836, Train Accuracy : 28.994'
Arguments: (', round: ', 0)
[1.7311729007720946, 35.61]
--- Logging error ---
Traceback (most recent call last):
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "E:\Github\CR-SAM\train\gsam_train.py", line 226, in <module>
    main(args)
  File "E:\Github\CR-SAM\train\gsam_train.py", line 193, in main
    log_metric(
  File "E:\Github\CR-SAM\utils\utils.py", line 27, in log_metric
    logging.info(', '.join(labels), ", round: ", round)
Message: 'Test Loss : 1.7311729007720946, Test Accuracy : 35.61'
Arguments: (', round: ', 0)
--- Logging error ---
Traceback (most recent call last):
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\logging\__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "E:\Github\CR-SAM\train\gsam_train.py", line 226, in <module>
    main(args)
  File "E:\Github\CR-SAM\train\gsam_train.py", line 193, in main
    log_metric(
  File "E:\Github\CR-SAM\utils\utils.py", line 27, in log_metric
    logging.info(', '.join(labels), ", round: ", round)
Message: 'Test Loss : 1.7311729007720946, Test Accuracy : 35.61'
Arguments: (', round: ', 0)
2025-01-17 11:50:34,434 | best acc:35.61
2025-01-17 11:50:34,586 | Epoch: [1 | 200]
2025-01-17 11:50:47,836 | Phase:train -- Batch_idx:100/391-- 966.15 samples/sec-- Loss:1.62 -- Acc:39.04
2025-01-17 11:51:01,162 | Phase:train -- Batch_idx:200/391-- 963.33 samples/sec-- Loss:1.58 -- Acc:40.79
2025-01-17 11:51:13,714 | Phase:train -- Batch_idx:300/391-- 981.44 samples/sec-- Loss:1.55 -- Acc:42.17
Traceback (most recent call last):
  File "E:\Github\CR-SAM\train\gsam_train.py", line 226, in <module>
    main(args)
  File "E:\Github\CR-SAM\train\gsam_train.py", line 186, in main
    trainloss, trainacc = run_one_epoch('train', dataset.train, model, criterion, optimizer, args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Github\CR-SAM\train\gsam_train.py", line 97, in run_one_epoch
    for batch_idx, inp_data in enumerate(loader, 1):
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\fetch.py", line 55, in fetch
    return self.collate_fn(data)
           ^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\collate.py", line 317, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\collate.py", line 142, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\anaconda3\envs\pfllib\Lib\site-packages\torch\utils\data\_utils\collate.py", line 235, in collate_int_fn
    return torch.tensor(batch)
           ^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
